{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","backgroundColor","mode","color","className","style","id","type","Navbar","to","logo","about","htmlFor","onClick","themeSelect","defaultChecked","name","value","toggleMode","btnText","TextForm","useState","text","setText","heading","rows","placeholder","onChange","e","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","find","document","getElementById","replc","indexOf","console","log","alert","replace","split","join","navigator","clipboard","writeText","filter","a","display","Alert","height","role","lower","charAt","slice","Capitalize","msg","defaultProps","App","setMode","setBtnText","setAlert","setColor","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8084bc6e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function About(props) {\r\n\r\n    let myStyle = {\r\n        backgroundColor: props.mode==='light'?'white':'#292e32', \r\n        color: props.mode==='light'?'black':'white'\r\n    };\r\n\r\n    return (\r\n        <div className=\" my-3 container\" style={myStyle}>\r\n            <h2 className=\"my-2\">About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                            <b>Textutils</b>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This application allows you to manipulate your text and change it to UPPERCASE, lowercase, replace words, copy text and remove spaces\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                            <strong>UPPERCASE</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Change the text to upper case by a simple click of the button\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                            <strong>lowercase</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Change the text to lower case by a single click of the button\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\" style={myStyle}>\r\n                            <strong>Replace</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseFour\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            The allows you to find a word and replace it with any word you like to\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFive\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\" style={myStyle}>\r\n                            <strong>Copy text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseFive\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This allows you to copy all the text from the feild\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingSix\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSix\" aria-expanded=\"false\" aria-controls=\"collapseSix\" style={myStyle}>\r\n                            <strong>Remove Extra Space</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseSix\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingSix\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Take out any extra space in your sentence by a simple click of a button\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.logo}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n\r\n                    {/*Radio button*/}\r\n                    <label htmlFor=\"inlineRadioOptions\" style={props.mode === 'light' ? {color: 'black'} : {color:'white'}}>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onClick={props.themeSelect} defaultChecked type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"primary\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Blue</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onClick={props.themeSelect} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"secondary\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Gray</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onClick={props.themeSelect} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"success\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Green</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onClick={props.themeSelect} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"danger\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Red</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onClick={props.themeSelect} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"warning\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Yellow</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onClick={props.themeSelect} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"info\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Aqua</label>\r\n                        </div>\r\n                    </label>\r\n\r\n                    {/*Toggle Dark Mode button */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.btnText}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logo: PropTypes.string.isRequired, //used to specify that it is required\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    logo: 'Default Logo',\r\n    about: 'Insert title here',\r\n    btnText: 'Toggle Mode'\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const valueUpdate = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const changeToUpper = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Coverted to Upper Case', 'success');\r\n    }\r\n\r\n    const changeToLower = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Coverted to Lower Case', 'success');\r\n    }\r\n\r\n    const handleReplace = () => {\r\n        let find = document.getElementById('findText').value;\r\n        let replc = document.getElementById('replaceText').value;\r\n        if (text.indexOf(find) === 0){\r\n            find = find + \" \";\r\n            replc = replc + \" \";\r\n            console.log(text.indexOf(find))\r\n            console.log(find);\r\n        }\r\n        else if (text.indexOf(find) === text.length-find.length) {\r\n            find = \" \"+ find;\r\n            replc = \" \"+ replc;\r\n            console.log(text.indexOf(find))\r\n            console.log(find);\r\n        }\r\n        else {\r\n            find = \" \" + find + \" \";\r\n            replc = \" \" + replc + \" \";\r\n            console.log(text.indexOf(find))\r\n            console.log(find);\r\n        }\r\n\r\n        if (text.indexOf(find) === -1){\r\n            console.log(text.indexOf(find));\r\n            alert(\"Word not found\");\r\n        }\r\n\r\n        let newText = text.replace(find,replc);\r\n        console.log(newText);\r\n        setText(newText);\r\n    }\r\n    \r\n    const handleCopyText = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert('Text has been copied', 'success');\r\n    }\r\n    \r\n    const handleRemoveSpace = () => {\r\n        let newText = text.split(/[ ] + /);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('Extra spaces has been removed', 'success');\r\n    }\r\n    \r\n    const handleClear = () => {\r\n        setText(\"\");\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <div className = 'container' style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h1 className=\"my-3\">{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} id=\"myBox\" rows=\"5\" placeholder=\"Enter you text here\" onChange={valueUpdate} style={{backgroundColor: props.mode==='light'?'white':'lightgray'}}></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className={`btn btn-${props.color}`} onClick={changeToUpper}>Convert to UPPERCASE</button>\r\n            <button disabled={text.length===0} className={`mx-1 my-1 btn btn-${props.color}`} onClick={changeToLower}>Convert to lowercase</button>\r\n            {/* find and place */}\r\n            <label htmlFor=\"findText\">Find: </label>\r\n            <input className=\"mx-1 my-1\" type=\"text\" id=\"findText\" />\r\n            <label htmlFor=\"replaceText\">Replace By: </label>\r\n            <input className=\"mx-1 my-1\" type=\"text\" id=\"replaceText\" />\r\n            <button disabled={text.length===0} className={`mx-1 my-1 btn btn-${props.color}`} onClick={handleReplace}>Replace</button>\r\n            {/*end of find and replace*/}\r\n            <button disabled={text.length===0} className={`mx-1 my-1 btn btn-${props.color}`} onClick={handleRemoveSpace}>Remove Extra Space</button><br/><br/>\r\n            <button disabled={text.length===0} className={`mx-1 my-1 btn btn-${props.color}`} onClick={handleCopyText}>Copy Text</button>\r\n            <button disabled={text.length===0} className={`mx-1 my-1 btn btn-${props.color}`} onClick={handleClear}>Clear</button>\r\n\r\n            <div className=\"container\">\r\n                <h2>Summary</h2>\r\n                <p>There are {text.split(/\\s+/).filter((a)=>{return a.length!==0}).length} words and {text.length} characters</p>\r\n                <p>This can be read in {(text.split(/\\s+/).filter((a)=>{return a.length!==0}).length)*0.008} minutes </p>\r\n                <div style={text.length>0?{display:'block'}:{display:'none'}}>\r\n                    <h2>Preview</h2>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTextForm.defaultProps = {\r\n    color: 'primary'\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const Capitalize = (type) => {\r\n        const lower = type.toLowerCase();\r\n        return (type.charAt(0).toUpperCase() + lower.slice(1));\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{Capitalize(props.alert.type)}: </strong>{props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [btnText, setBtnText] = useState('Enable Dark Mode');\n  const [alert, setAlert] = useState(null);\n  const [color, setColor] = useState('primary');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#292e32';\n      setBtnText('Enable Light Mode');\n      showAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      setBtnText('Enable Dark Mode');\n      showAlert('Light mode has been enabled', 'success');\n    }\n  }\n\n  const themeSelect = (e) => {\n    setColor(e.target.value);\n    console.log(setColor);\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar logo='TextUtils' about='About' mode={mode} toggleMode={toggleMode} btnText={btnText} showAlert={showAlert} themeSelect={themeSelect} />\n        <Alert alert={alert} />\n        <Switch>\n          <Route exact path=\"/\">\n            <TextForm heading='Enter a text to analyze' mode={mode} showAlert={showAlert} color={color} />\n          </Route>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}